#!/bin/bash
# =====================================================
# V2bX Â§öÂπ≥Âè∞Áã¨Á´ãÁÆ°ÁêÜËÑöÊú¨ÔºàÂÆâË£Ö / Âç∏ËΩΩ / ÁÆ°ÁêÜ‰∏Ä‰ΩìÔºâ
# ÊîØÊåÅÂ§öË∑ØÂæÑ„ÄÅ‰∫í‰∏çÂÜ≤Á™Å
# by nuro-hia
# =====================================================

set -e
red='\033[0;31m'; green='\033[0;32m'; yellow='\033[0;33m'; plain='\033[0m'

pause(){ read -rp "ÊåâÂõûËΩ¶ËøîÂõûËèúÂçï..." _; }

print_header(){
  clear
  echo -e "${green}==============================${plain}"
  echo -e "         V2bX Â§öÂπ≥Âè∞ÁÆ°ÁêÜËÑöÊú¨"
  echo -e "==============================${plain}\n"
}

# ---------------------------
# ÂÆâË£Ö‰æùËµñ
# ---------------------------
install_base(){
  echo -e "${green}Ê≠£Âú®ÂÆâË£Ö‰æùËµñ...${plain}"
  if [[ -f /etc/redhat-release ]]; then
    yum install -y wget curl unzip tar socat ca-certificates >/dev/null 2>&1
  elif grep -Eqi "debian" /etc/issue || grep -Eqi "debian" /proc/version; then
    apt update -y >/dev/null 2>&1
    apt install -y wget curl unzip tar socat ca-certificates >/dev/null 2>&1
  elif grep -Eqi "ubuntu" /etc/issue || grep -Eqi "ubuntu" /proc/version; then
    apt update -y >/dev/null 2>&1
    apt install -y wget curl unzip tar socat ca-certificates >/dev/null 2>&1
  elif grep -Eqi "alpine" /etc/issue; then
    apk add wget curl unzip tar socat ca-certificates >/dev/null 2>&1
  fi
}

# ---------------------------
# ÂÆâË£ÖÊñ∞Âπ≥Âè∞
# ---------------------------
install_platform(){
  print_header
  echo "ËØ∑ËæìÂÖ•Âπ≥Âè∞Ê†áËØÜÔºà‰ªÖÈôêÂ≠óÊØç„ÄÅÊï∞Â≠ó„ÄÅ‰∏ãÂàíÁ∫ø„ÄÅ‰∏≠Ê®™Á∫øÔºâ"
  read -rp "Âπ≥Âè∞ÂêçÔºàÂ¶Ç mist„ÄÅcloud„ÄÅhkÔºåÈªòËÆ§ defaultÔºâ: " PLATFORM_NAME
  PLATFORM_NAME=${PLATFORM_NAME:-default}
  if [[ ! $PLATFORM_NAME =~ ^[A-Za-z0-9_-]+$ ]]; then
    echo -e "${red}ÈîôËØØÔºöÂπ≥Âè∞Âêç‰ªÖËÉΩÂåÖÂê´Â≠óÊØç„ÄÅÊï∞Â≠ó„ÄÅ‰∏ãÂàíÁ∫øÊàñ‰∏≠Ê®™Á∫øÔºÅ${plain}"
    pause; return
  fi

  INSTALL_DIR="/usr/local/V2bX-${PLATFORM_NAME}"
  CONF_DIR="/etc/V2bX-${PLATFORM_NAME}"
  SERVICE_NAME="V2bX-${PLATFORM_NAME}.service"
  CMD_NAME="v2bx-${PLATFORM_NAME}"

  echo ""
  echo -e "üß© Âπ≥Âè∞ÂêçÁß∞: ${green}${PLATFORM_NAME}${plain}"
  echo -e "üìÅ ÂÆâË£ÖÁõÆÂΩï: ${yellow}${INSTALL_DIR}${plain}"
  echo -e "‚öôÔ∏è ÈÖçÁΩÆÁõÆÂΩï: ${yellow}${CONF_DIR}${plain}"
  echo -e "üîß ÊúçÂä°ÂêçÁß∞: ${yellow}${SERVICE_NAME}${plain}"
  echo -e "üì¶ ÂëΩ‰ª§ÂêçÁß∞: ${yellow}${CMD_NAME}${plain}\n"
  read -rp "Á°ÆËÆ§ÂºÄÂßãÂÆâË£Ö? (y/n): " confirm
  [[ $confirm != [Yy] ]] && echo "Â∑≤ÂèñÊ∂à„ÄÇ" && pause && return

  arch=$(uname -m)
  if [[ $arch == "x86_64" || $arch == "amd64" ]]; then arch="64"
  elif [[ $arch == "aarch64" || $arch == "arm64" ]]; then arch="arm64-v8a"
  else arch="64"; fi

  install_base
  mkdir -p "${INSTALL_DIR}" "${CONF_DIR}"
  cd "${INSTALL_DIR}"

  echo -e "${green}Ê£ÄÊµã V2bX ÊúÄÊñ∞ÁâàÊú¨...${plain}"
  last_version=$(curl -Ls "https://api.github.com/repos/wyx2685/V2bX/releases/latest" \
      | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
  [[ -z "$last_version" ]] && echo -e "${red}Ê£ÄÊµãÁâàÊú¨Â§±Ë¥•ÔºÅ${plain}" && pause && return

  echo -e "Ê£ÄÊµãÂà∞ÁâàÊú¨: ${yellow}${last_version}${plain}"
  wget -q -O "${INSTALL_DIR}/V2bX-linux.zip" \
    "https://github.com/wyx2685/V2bX/releases/download/${last_version}/V2bX-linux-${arch}.zip"
  unzip -q V2bX-linux.zip && rm -f V2bX-linux.zip
  chmod +x V2bX
  cp geoip.dat geosite.dat "${CONF_DIR}/" 2>/dev/null || true
  [[ ! -f "${CONF_DIR}/config.json" ]] && cp config.json "${CONF_DIR}/"

  echo -e "${green}ÂàõÂª∫ systemd ÊúçÂä°...${plain}"
  cat <<EOF >/etc/systemd/system/${SERVICE_NAME}
[Unit]
Description=V2bX Platform (${PLATFORM_NAME})
After=network.target nss-lookup.target

[Service]
Type=simple
User=root
WorkingDirectory=${INSTALL_DIR}
ExecStart=${INSTALL_DIR}/V2bX server -c ${CONF_DIR}/config.json
Restart=always
RestartSec=10
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target
EOF

  systemctl daemon-reload
  systemctl enable --now ${SERVICE_NAME}

  echo -e "${green}ÂàõÂª∫Áã¨Á´ãÁÆ°ÁêÜÂëΩ‰ª§...${plain}"
  curl -sSL -o "/usr/bin/${CMD_NAME}" \
    https://raw.githubusercontent.com/wyx2685/V2bX-script/master/V2bX.sh
  chmod +x "/usr/bin/${CMD_NAME}"
  sed -i "1iINSTANCE='${PLATFORM_NAME}'\nWORK_DIR='${INSTALL_DIR}'\nCONF_DIR='${CONF_DIR}'\nSERVICE_NAME='${SERVICE_NAME}'\n" "/usr/bin/${CMD_NAME}"

  echo -e "\n‚úÖ ${green}Âπ≥Âè∞ ${PLATFORM_NAME} ÂÆâË£ÖÂÆåÊàêÔºÅ${plain}"
  pause
}

# ---------------------------
# Âç∏ËΩΩÂπ≥Âè∞
# ---------------------------
uninstall_platform(){
  print_header
  mapfile -t PLATFORMS < <(ls -d /usr/local/V2bX-* 2>/dev/null || true)
  [[ ${#PLATFORMS[@]} -eq 0 ]] && echo -e "${yellow}Êú™Ê£ÄÊµãÂà∞Â∑≤ÂÆâË£ÖÂπ≥Âè∞„ÄÇ${plain}" && pause && return

  echo "ËØ∑ÈÄâÊã©Ë¶ÅÂç∏ËΩΩÁöÑÂπ≥Âè∞Ôºö"
  for i in "${!PLATFORMS[@]}"; do
    name=$(basename "${PLATFORMS[$i]}")
    echo "$((i+1)). ${name}"
  done
  read -rp "ËæìÂÖ•Â∫èÂè∑ÈÄâÊã©: " choice
  ((choice>=1 && choice<=${#PLATFORMS[@]})) || { echo -e "${red}Êó†ÊïàÈÄâÊã©${plain}"; pause; return; }

  TARGET=${PLATFORMS[$((choice-1))]}
  PLATFORM_NAME=$(basename "$TARGET" | sed 's/^V2bX-//')
  SERVICE_NAME="V2bX-${PLATFORM_NAME}.service"
  CMD_NAME="/usr/bin/v2bx-${PLATFORM_NAME}"

  echo ""
  read -rp "Á°ÆËÆ§Âç∏ËΩΩ ${PLATFORM_NAME}? (y/n): " confirm
  [[ $confirm != [Yy] ]] && echo "Â∑≤ÂèñÊ∂à„ÄÇ" && pause && return

  systemctl stop ${SERVICE_NAME} 2>/dev/null || true
  systemctl disable ${SERVICE_NAME} 2>/dev/null || true
  rm -f /etc/systemd/system/${SERVICE_NAME}
  rm -rf "/usr/local/V2bX-${PLATFORM_NAME}" "/etc/V2bX-${PLATFORM_NAME}" "${CMD_NAME}"
  systemctl daemon-reload
  echo -e "${green}Âπ≥Âè∞ ${PLATFORM_NAME} Â∑≤ÂΩªÂ∫ïÂç∏ËΩΩ„ÄÇ${plain}"
  pause
}

# ---------------------------
# ÁÆ°ÁêÜÂπ≥Âè∞
# ---------------------------
manage_platform(){
  print_header
  mapfile -t PLATFORMS < <(ls -d /usr/local/V2bX-* 2>/dev/null || true)
  [[ ${#PLATFORMS[@]} -eq 0 ]] && echo -e "${yellow}Êú™Ê£ÄÊµãÂà∞Â∑≤ÂÆâË£ÖÂπ≥Âè∞„ÄÇ${plain}" && pause && return

  echo "ËØ∑ÈÄâÊã©Ë¶ÅÁÆ°ÁêÜÁöÑÂπ≥Âè∞Ôºö"
  for i in "${!PLATFORMS[@]}"; do
    name=$(basename "${PLATFORMS[$i]}")
    echo "$((i+1)). ${name}"
  done
  read -rp "ËæìÂÖ•Â∫èÂè∑ÈÄâÊã©: " choice
  ((choice>=1 && choice<=${#PLATFORMS[@]})) || { echo -e "${red}Êó†ÊïàÈÄâÊã©${plain}"; pause; return; }

  PLATFORM_NAME=$(basename "${PLATFORMS[$((choice-1))]}" | sed 's/^V2bX-//')
  SERVICE="V2bX-${PLATFORM_NAME}.service"
  CMD="/usr/bin/v2bx-${PLATFORM_NAME}"

  while true; do
    print_header
    echo "üì¶ ÁÆ°ÁêÜÂπ≥Âè∞: ${yellow}${PLATFORM_NAME}${plain}"
    echo "----------------------------------"
    echo "1. ÂêØÂä®ÊúçÂä°"
    echo "2. ÂÅúÊ≠¢ÊúçÂä°"
    echo "3. ÈáçÂêØÊúçÂä°"
    echo "4. Êü•ÁúãËøêË°åÁä∂ÊÄÅ"
    echo "5. Êü•ÁúãÂÆûÊó∂Êó•Âøó"
    echo "6. ÊâìÂºÄÈÖçÁΩÆËèúÂçï (${CMD})"
    echo "7. ËøîÂõû‰∏äÁ∫ßËèúÂçï"
    echo "----------------------------------"
    read -rp "ËØ∑ÈÄâÊã© [1-7]: " opt
    case $opt in
      1) systemctl start ${SERVICE}; echo -e "${green}Â∑≤ÂêØÂä®${plain}"; pause ;;
      2) systemctl stop ${SERVICE}; echo -e "${green}Â∑≤ÂÅúÊ≠¢${plain}"; pause ;;
      3) systemctl restart ${SERVICE}; echo -e "${green}Â∑≤ÈáçÂêØ${plain}"; pause ;;
      4) systemctl status ${SERVICE} --no-pager; pause ;;
      5) journalctl -u ${SERVICE} -f ;;
      6) [[ -x ${CMD} ]] && ${CMD} || echo -e "${red}Êú™ÊâæÂà∞ÁÆ°ÁêÜÂëΩ‰ª§„ÄÇ${plain}"; pause ;;
      7) return ;;
      *) echo -e "${red}Êó†ÊïàÈÄâÈ°π${plain}"; sleep 1 ;;
    esac
  done
}

# ---------------------------
# ‰∏ªËèúÂçï
# ---------------------------
main_menu(){
  while true; do
    print_header
    echo "1. ÂÆâË£ÖÊñ∞Âπ≥Âè∞ÂÆû‰æã"
    echo "2. Âç∏ËΩΩÂ∑≤ÊúâÂπ≥Âè∞ÂÆû‰æã"
    echo "3. ÁÆ°ÁêÜÂ∑≤ÂÆâË£ÖÂπ≥Âè∞"
    echo "4. ÈÄÄÂá∫"
    echo ""
    read -rp "ËØ∑ËæìÂÖ•ÈÄâÈ°π [1-4]: " num
    case $num in
      1) install_platform ;;
      2) uninstall_platform ;;
      3) manage_platform ;;
      4) echo "Â∑≤ÈÄÄÂá∫„ÄÇ"; exit 0 ;;
      *) echo -e "${red}Êó†ÊïàÈÄâÈ°πÔºÅ${plain}" && sleep 1 ;;
    esac
  done
}

main_menu
